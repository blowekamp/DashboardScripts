#
# Maintainer: blowekamp@mail.nih.gov
#

# Set names
set( CTEST_SITE "$ENV{HOSTNAME}.nlm" )
set( CTEST_BUILD_NAME "RH6.3-SimpleITK-valgrind" )

#  Set how and where to build
set ( CTEST_BUILD_CONFIGURATION "Debug" )
set ( CTEST_CMAKE_GENERATOR "Unix Makefiles" )
set ( CTEST_DASHBOARD_ROOT "/scratch/$ENV{USER}/dashboards/${CTEST_BUILD_NAME}" )



include( ProcessorCount )
ProcessorCount( PROCESSOR_COUNT )
if(PROCESSOR_COUNT)
  set( CTEST_BUILD_FLAGS -j${PROCESSOR_COUNT})
  set( CTEST_TEST_ARGS PARALLEL_LEVEL ${PROCESSOR_COUNT} )
endif()


set( CTEST_TEST_TIMEOUT 10000 )
set( CTEST_MEMORYCHECK_COMMAND "/usr/bin/valgrind" )
set( CTEST_MEMORYCHECK_COMMAND_OPTIONS "--trace-children=yes --quiet --tool=memcheck --leak-check=yes --show-reachable=yes --num-callers=50 --verbose --demangle=yes --gen-suppressions=all")
set( CTEST_MEMORYCHECK_SUPPRESSIONS_FILE ${CTEST_SCRIPT_DIRECTORY}/SimpleITKValgrind.supp)

# we need to manually set path for ITK libraries
set( ENV{LD_LIBRARY_PATH} ${CTEST_DASHBOARD_ROOT}/SimpleITK-build/ITK-build/lib:$ENV{LD_LIBRARY_PATH} )

set( dashboard_model Nightly )
set( dashboard_git_branch "next" )
set( dashboard_do_memcheck 1 )

# Set initial values for the CMakeCache
set ( dashboard_cache "
    BUILD_SHARED_LIBS:BOOL=ON
    CMAKE_CXX_FLAGS:STRING=-g -O0
    CMAKE_C_FLAGS:STRING=-g -O0
    CMAKE_EXE_LINKER_FLAGS:STRING=-g -O0 -coverage
    MEMORY_CHECK_COMMAND:STRING=${TEST_MEMORYCHECK_COMMAND}
    MEMORY_CHECK_COMMAND_OPTIONS=${CTEST_MEMORYCHECK_COMMAND_OPTIONS}
    WRAP_LUA:BOOL=OFF
    WRAP_PYTHON:BOOL=OFF
    WRAP_JAVA:BOOL=OFF
    WRAP_CSHARP:BOOL=OFF
    WRAP_TCL:BOOL=OFF
    WRAP_R:BOOL=OFF
    WRAP_RUBY:BOOL=OFF
")

include(${CTEST_SCRIPT_DIRECTORY}/../SimpleITK-dashboard/simpleitk_common.cmake)
